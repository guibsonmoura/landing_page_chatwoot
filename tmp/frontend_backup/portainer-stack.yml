version: "3.8"

services:
  nexus-frontend:
    image: nexus-agents:latest
    container_name: nexus-agents-frontend
    environment:
      - NODE_ENV=production
      - LOG_LEVEL=error
      - NEXT_PUBLIC_SUPABASE_URL={{NEXT_PUBLIC_SUPABASE_URL}}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY={{NEXT_PUBLIC_SUPABASE_ANON_KEY}}
      - SUPABASE_SERVICE_ROLE_KEY={{SUPABASE_SERVICE_ROLE_KEY}}
      - OPENAI_API_KEY={{OPENAI_API_KEY}}
      - WEBHOOK_API_KEY={{WEBHOOK_API_KEY}}
    networks:
      - network_public
    volumes:
      - nexus_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          # Ajustar conforme seu ambiente (manager ou worker)
          - node.role == manager
      resources:
        limits:
          cpus: "2"
          memory: 1024M
        reservations:
          cpus: "0.5"
          memory: 512M
      labels:
        # Habilita o Traefik
        - traefik.enable=true
        
        # Roteador principal HTTPS
        - traefik.http.routers.nexus_frontend.rule=Host(`{{DOMAIN}}`)
        - traefik.http.routers.nexus_frontend.entrypoints=websecure
        - traefik.http.routers.nexus_frontend.tls.certresolver=le
        - traefik.http.routers.nexus_frontend.service=nexus_frontend
        
        # Configuração do serviço
        - traefik.http.services.nexus_frontend.loadbalancer.server.port=3000
        - traefik.http.services.nexus_frontend.loadbalancer.passHostHeader=true
        
        # Health check para o Traefik
        - traefik.http.services.nexus_frontend.loadbalancer.healthcheck.path=/api/health
        - traefik.http.services.nexus_frontend.loadbalancer.healthcheck.interval=30s
        - traefik.http.services.nexus_frontend.loadbalancer.healthcheck.timeout=10s
        
        # Headers de segurança
        - traefik.http.middlewares.nexus-security.headers.frameDeny=true
        - traefik.http.middlewares.nexus-security.headers.contentTypeNosniff=true
        - traefik.http.middlewares.nexus-security.headers.browserXssFilter=true
        - traefik.http.middlewares.nexus-security.headers.stsSeconds=31536000
        - traefik.http.middlewares.nexus-security.headers.stsIncludeSubdomains=true
        - traefik.http.middlewares.nexus-security.headers.stsPreload=true
        - traefik.http.middlewares.nexus-security.headers.referrerPolicy=strict-origin-when-cross-origin
        - traefik.http.middlewares.nexus-security.headers.customRequestHeaders.X-Forwarded-Proto=https
        
        # Rate limiting para APIs
        - traefik.http.middlewares.nexus-api-ratelimit.ratelimit.burst=20
        - traefik.http.middlewares.nexus-api-ratelimit.ratelimit.average=10
        
        # Rate limiting geral
        - traefik.http.middlewares.nexus-general-ratelimit.ratelimit.burst=100
        - traefik.http.middlewares.nexus-general-ratelimit.ratelimit.average=50
        
        # Middleware para rotas de API
        - traefik.http.routers.nexus_api.rule=Host(`{{DOMAIN}}`) && PathPrefix(`/api`)
        - traefik.http.routers.nexus_api.entrypoints=websecure
        - traefik.http.routers.nexus_api.tls.certresolver=le
        - traefik.http.routers.nexus_api.service=nexus_frontend
        - traefik.http.routers.nexus_api.middlewares=nexus-security@docker,nexus-api-ratelimit@docker
        - traefik.http.routers.nexus_api.priority=100
        
        # Middleware para rotas gerais (prioridade menor)
        - traefik.http.routers.nexus_frontend.middlewares=nexus-security@docker,nexus-general-ratelimit@docker
        - traefik.http.routers.nexus_frontend.priority=50
        
        # Redirect HTTP to HTTPS
        - traefik.http.routers.nexus_frontend_http.rule=Host(`{{DOMAIN}}`)
        - traefik.http.routers.nexus_frontend_http.entrypoints=web
        - traefik.http.routers.nexus_frontend_http.middlewares=redirect-to-https@docker
        - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
        - traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true

volumes:
  nexus_logs:
    external: true
    name: nexus_logs

networks:
  network_public:
    external: true
    name: network_public
